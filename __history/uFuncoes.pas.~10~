unit uFuncoes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uHerancaBase, Vcl.StdCtrls,
  Vcl.Imaging.pngimage, Vcl.ExtCtrls, Data.DB, Vcl.Mask, Vcl.Grids, Vcl.DBGrids,
  System.ImageList, Vcl.ImgList, Vcl.DBCtrls, Vcl.ComCtrls;

  procedure CriarAba(aForm :TFormClass; aPageControl : TPageControl; aIndexImagem : Integer);
  function AbaExiste(aNomeAba : string; aPageControl : TPageControl): Boolean;

implementation

procedure CriarAba(aForm :TFormClass; aPageControl : TPageControl; aIndexImagem : Integer);
var TabSheet : TTabSheet;
    Form     : TForm;
begin
   Form := aForm.Create(nil);

   TabSheet := TTabSheet.Create(nil);

   TabSheet.PageControl := aPageControl;
   TabSheet.Caption     := form.Caption;
   TabSheet.ImageIndex  := aIndexImagem;

   Form.Align       := alClient;
   Form.BorderStyle := bsNone;
   Form.Parent      := tabSheet;

   Form.Show;

   aPageControl.ActivePage := tabSheet;

end;

function AbaExiste(aNomeAba : string; aPageControl : TPageControl): Boolean;
var I : Integer;
begin

   Result := false;

   for I := 0 to aPageControl.PageCount -1 do
   begin
     if LowerCase(aPageControl.Pages[i].Caption) = LowerCase(aNomeAba) then
     begin
         aPageControl.ActivePage := aPageControl.Pages[i];;
         aPageControl.TabIndex := I;

         Result := true;
         Break;
     end;
   end;
end;

end.
